{"version":3,"sources":["config/api.ts","config/theme.ts","contexts/Alert.ts","services/campaigns.ts","components/SelectMultipleInput/SelectMultipleInput.tsx","components/TargetAudienceCard/TargetAudienceCard.tsx","components/InsightsCard/InsightsCard.tsx","components/CreativesCard/CreativesCard.tsx","utils/getImage.ts","components/PlatformDetailsDrawer/PlatformDetailsDrawer.tsx","utils/currency.ts","components/PlatformCard/PlatformCard.tsx","components/CampaignDetails/CampaignDetails.tsx","components/CampaignDetails/index.tsx","hooks/useCampaign.ts","components/CampaignsTable/CampaignsTable.tsx","components/CampaignsTable/index.tsx","hooks/useCampaignSummaries.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["api","axios","create","baseURL","process","theme","createMuiTheme","palette","primary","main","secondary","AlertContext","createContext","error","setError","campaigns","get","id","useStyles","makeStyles","formControl","minWidth","width","chips","display","flexWrap","chip","margin","noLabel","marginTop","spacing","SelectMultipleInput","label","values","classes","FormControl","className","variant","size","InputLabel","Select","multiple","value","input","OutlinedInput","readOnly","renderValue","map","Chip","color","key","clickable","IconComponent","root","maxWidth","title","fontSize","marginBottom","TargetAudienceCard","targetAudience","Card","CardContent","Typography","gutterBottom","Grid","container","direction","item","shrink","Slider","age_range","valueLabelDisplay","languages","genders","locations","interests","InsightsCard","insights","TextField","impressions","type","InputProps","fullWidth","clicks","website_visits","nanos_score","cost_per_click","startAdornment","InputAdornment","position","click_through_rate","advanced_kpi_1","advanced_kpi_2","CreativesCard","creatives","header","description","multiline","url","src","image","isUrl","style","height","paddingTop","imageStyle","maxHeight","paper","padding","PlatformDetailsDrawer","open","platform","onClose","Drawer","anchor","target_audience","currency","Math","round","toFixed","replace","PlatformCard","name","useState","drawer","toggleDrawer","status","total_budget","moment","start_date","format","end_date","CardActions","Button","onClick","loading","flexDirection","justifyContent","divider","CampaignDetails","campaign","getName","Skeleton","animation","keys","Object","platforms","goal","Divider","data","setData","setLoading","alert","useContext","useEffect","a","res","message","fetchData","useCampaign","columns","field","render","CampaignsTable","isLoading","icons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","detailPanel","useCampaignSummaries","onCampaignPress","console","log","alignItems","App","ThemeProvider","Provider","Alert","severity","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6cbc8214.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst BLUE = '#0945a8';\nconst GREEN = '#5eb782';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: GREEN,\n    },\n    secondary: {\n      main: BLUE,\n    },\n  },\n});\n","import { createContext } from 'react';\n\ntype AlertContextType = {\n  error: string;\n  setError: (error: string) => void;\n};\n\nconst AlertContext = createContext({\n  error: '',\n  setError: () => undefined,\n} as AlertContextType);\n\nexport default AlertContext;\n","import { api } from '../config';\n\nexport const campaigns = {\n  summary: () => api.get<CampaignSummary[]>('/campaigns-summary'),\n  list: () => api.get<Campaign[]>('/campaigns'),\n  get: (id: number) => api.get<Campaign>(`/campaigns/${id}`),\n};\n","import React from 'react';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput,\n  Chip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface Props {\n  label: string;\n  values: string[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n    width: '100%',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport function SelectMultipleInput({ label, values }: Props) {\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      className={classes.formControl}\n      variant=\"outlined\"\n      size=\"small\"\n    >\n      <InputLabel variant=\"outlined\">{label}</InputLabel>\n      <Select\n        multiple\n        value={values}\n        input={<OutlinedInput label={label} readOnly />}\n        renderValue={() => (\n          <div className={classes.chips}>\n            {values.map(value => (\n              <Chip\n                color=\"secondary\"\n                key={value}\n                label={value}\n                className={classes.chip}\n                clickable\n                size=\"small\"\n              />\n            ))}\n          </div>\n        )}\n        IconComponent={() => null}\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Slider,\n  InputLabel,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SelectMultipleInput } from '../SelectMultipleInput';\n\ninterface Props {\n  targetAudience: TargetAudience;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 300,\n  },\n  title: {\n    fontSize: 14,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function TargetAudienceCard({ targetAudience }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Target Audience\n        </Typography>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <InputLabel variant=\"outlined\" shrink>\n              Age Range\n            </InputLabel>\n            <Slider\n              value={targetAudience.age_range}\n              valueLabelDisplay=\"auto\"\n              color=\"secondary\"\n            />\n          </Grid>\n          <Grid item>\n            <SelectMultipleInput\n              label=\"Languages\"\n              values={targetAudience.languages}\n            />\n          </Grid>\n          <Grid item>\n            <SelectMultipleInput\n              label=\"Gender\"\n              values={targetAudience.genders}\n            />\n          </Grid>\n          <Grid item>\n            <SelectMultipleInput\n              label=\"Locations\"\n              values={targetAudience.locations}\n            />\n          </Grid>\n          <Grid item>\n            <SelectMultipleInput\n              label=\"Interests\"\n              values={targetAudience.interests}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  InputAdornment,\n} from '@material-ui/core';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface Props {\n  insights: Insights;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function InsightsCard({ insights }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Insights\n        </Typography>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <TextField\n              value={insights.impressions}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Impressions\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.clicks}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Clicks\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.website_visits}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Website Visits\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.nanos_score}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Nanos Score\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.cost_per_click}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AttachMoney />\n                  </InputAdornment>\n                ),\n              }}\n              label=\"Cost Per Click\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.click_through_rate}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Click Through Rate\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.advanced_kpi_1}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Advanced KPI 1\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={insights.advanced_kpi_2}\n              type=\"number\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Advanced KPI 2\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  InputLabel,\n} from '@material-ui/core';\nimport Image from 'material-ui-image';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getImage } from '../../utils/getImage';\n\ninterface Props {\n  creatives: Creatives;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function CreativesCard({ creatives }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Creatives\n        </Typography>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <TextField\n              value={creatives.header}\n              type=\"text\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Header\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={creatives.description}\n              type=\"text\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"Description\"\n              variant=\"outlined\"\n              size=\"small\"\n              multiline\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              value={creatives.url}\n              type=\"text\"\n              InputProps={{\n                readOnly: true,\n              }}\n              label=\"URL\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <InputLabel variant=\"outlined\" shrink>\n              Image\n            </InputLabel>\n            <Image\n              src={getImage(creatives.image)}\n              style={{ height: 200, paddingTop: 0 }}\n              imageStyle={{\n                maxWidth: '100%',\n                width: 'auto',\n                height: '100%',\n                maxHeight: 250,\n              }}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import isUrl from 'is-url';\n\n// Temporary util to get the image from the /images folder of the API\nexport function getImage(value: string) {\n  if (isUrl(value)) {\n    return value;\n  }\n\n  return `${process.env.REACT_APP_API_URL}/images/${value}`;\n}\n","import React from 'react';\nimport { Drawer, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TargetAudienceCard } from '../TargetAudienceCard';\nimport { InsightsCard } from '../InsightsCard';\nimport { CreativesCard } from '../CreativesCard';\n\ninterface Props {\n  open: boolean;\n  platform: Platform;\n  onClose: () => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    maxHeight: '70vh',\n  },\n}));\n\nexport function PlatformDetailsDrawer({ open, platform, onClose }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      onClose={onClose}\n      classes={{\n        paper: classes.paper,\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item>\n          <CreativesCard creatives={platform.creatives} />\n        </Grid>\n        <Grid item>\n          <TargetAudienceCard targetAudience={platform.target_audience} />\n        </Grid>\n        <Grid item>\n          <InsightsCard insights={platform.insights} />\n        </Grid>\n      </Grid>\n    </Drawer>\n  );\n}\n","export function currency(value: number) {\n  return (Math.round(value * 100) / 100)\n    .toFixed(2)\n    .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n}\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Grid,\n  Typography,\n  TextField,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PlatformDetailsDrawer } from '../PlatformDetailsDrawer';\nimport { currency } from '../../utils/currency';\n\ninterface Props {\n  name: string;\n  platform: Platform;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function PlatformCard({ name, platform }: Props) {\n  const [drawer, toggleDrawer] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {name}\n          </Typography>\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                value={platform.status}\n                type=\"text\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                label=\"Status\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                value={currency(platform.total_budget)}\n                type=\"number\"\n                InputProps={{\n                  readOnly: true,\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AttachMoney />\n                    </InputAdornment>\n                  ),\n                }}\n                label=\"Total Budget\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                value={moment(platform.start_date).format('YYYY-MM-DD')}\n                type=\"date\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                label=\"Start Date\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                value={moment(platform.end_date).format('YYYY-MM-DD')}\n                type=\"date\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                label=\"End Date\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" onClick={() => toggleDrawer(true)}>\n            See Details\n          </Button>\n        </CardActions>\n      </Card>\n      <PlatformDetailsDrawer\n        platform={platform}\n        open={drawer}\n        onClose={() => toggleDrawer(false)}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  Divider,\n  Typography,\n} from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport { PlatformCard } from '../PlatformCard';\nimport { currency } from '../../utils';\n\ninterface Props {\n  campaign: Campaign | undefined;\n  loading: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3),\n    '& .MuiTextField-root, .MuiSkeleton-root': {\n      margin: theme.spacing(1),\n      width: '20%',\n      minWidth: 200,\n    },\n  },\n  loading: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  title: {\n    fontSize: 14,\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function CampaignDetails({ campaign, loading }: Props) {\n  const classes = useStyles();\n\n  function getName(value: string) {\n    switch (value) {\n      case 'facebook':\n        return 'Facebook';\n      case 'instagram':\n        return 'Instagram';\n      case 'google':\n        return 'Google Adwords';\n      default:\n        return '';\n    }\n  }\n\n  if (loading || !campaign) {\n    return (\n      <div className={classes.root}>\n        <Skeleton animation=\"wave\" variant=\"rect\" height={40} width={200} />\n        <Skeleton animation=\"wave\" variant=\"rect\" height={40} width={200} />\n        <Skeleton animation=\"wave\" variant=\"rect\" height={40} width={200} />\n        <Skeleton animation=\"wave\" variant=\"rect\" height={40} width={200} />\n      </div>\n    );\n  }\n\n  const keys = Object.keys(campaign.platforms) as PlatformKey[];\n\n  return (\n    <div className={classes.root}>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        General Information\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <TextField\n            value={campaign.name}\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Name\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            value={campaign.goal}\n            type=\"text\"\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Goal\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            value={campaign.status}\n            type=\"text\"\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Status\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            value={currency(campaign.total_budget)}\n            type=\"number\"\n            InputProps={{\n              readOnly: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AttachMoney />\n                </InputAdornment>\n              ),\n            }}\n            label=\"Total Budget\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <div>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Platforms Details\n        </Typography>\n        <Grid container spacing={2}>\n          {keys.map(\n            key =>\n              campaign.platforms[key] && (\n                <Grid item key={key}>\n                  <PlatformCard\n                    name={getName(key)}\n                    platform={campaign.platforms[key]}\n                  />\n                </Grid>\n              )\n          )}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { CampaignDetails } from './CampaignDetails';\nimport { useCampaign } from '../../hooks';\n\ninterface Props {\n  id: number;\n}\n\nexport default function({ id }: Props) {\n  const [campaign, loading] = useCampaign(id);\n\n  return <CampaignDetails campaign={campaign} loading={loading} />;\n}\n","import { useState, useEffect, useContext } from 'react';\nimport { campaigns } from '../services';\nimport AlertContext from '../contexts/Alert';\n\nexport function useCampaign(id: number): [Campaign | undefined, boolean] {\n  const [data, setData] = useState<Campaign>();\n  const [loading, setLoading] = useState(false);\n  const alert = useContext(AlertContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await campaigns.get(id);\n\n        setData(res.data);\n\n        setLoading(false);\n      } catch (error) {\n        alert.setError(error.message);\n        setLoading(false);\n      }\n    }\n\n    setLoading(true);\n    fetchData();\n  }, [id, alert]);\n\n  return [data, loading];\n}\n","import React, { forwardRef } from 'react';\nimport MateriaTable from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport CampaignDetails from '../CampaignDetails';\nimport { currency } from '../../utils';\n\ninterface Props {\n  campaigns: CampaignSummary[];\n  loading: boolean;\n  onCampaignPress: (campaign?: CampaignSummary) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n  },\n});\n\nconst columns = [\n  { title: 'Campaign Name', field: 'name' },\n  { title: 'Goal', field: 'goal' },\n  {\n    title: 'Total Budget',\n    field: 'total_budget',\n    render: ({ total_budget }: CampaignSummary) =>\n      `$ ${currency(total_budget)}`,\n  },\n  { title: 'Status', field: 'status' },\n];\n\nexport function CampaignsTable({ campaigns, loading }: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MateriaTable\n        title=\"Campaigns\"\n        isLoading={loading}\n        columns={columns}\n        data={campaigns}\n        icons={{\n          Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n          Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n          Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n          Delete: forwardRef((props, ref) => (\n            <DeleteOutline {...props} ref={ref} />\n          )),\n          DetailPanel: forwardRef((props, ref) => (\n            <ChevronRight {...props} ref={ref} />\n          )),\n          Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n          Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n          Filter: forwardRef((props, ref) => (\n            <FilterList {...props} ref={ref} />\n          )),\n          FirstPage: forwardRef((props, ref) => (\n            <FirstPage {...props} ref={ref} />\n          )),\n          LastPage: forwardRef((props, ref) => (\n            <LastPage {...props} ref={ref} />\n          )),\n          NextPage: forwardRef((props, ref) => (\n            <ChevronRight {...props} ref={ref} />\n          )),\n          PreviousPage: forwardRef((props, ref) => (\n            <ChevronLeft {...props} ref={ref} />\n          )),\n          ResetSearch: forwardRef((props, ref) => (\n            <Clear {...props} ref={ref} />\n          )),\n          Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n          SortArrow: forwardRef((props, ref) => (\n            <ArrowDownward {...props} ref={ref} />\n          )),\n          ThirdStateCheck: forwardRef((props, ref) => (\n            <Remove {...props} ref={ref} />\n          )),\n          ViewColumn: forwardRef((props, ref) => (\n            <ViewColumn {...props} ref={ref} />\n          )),\n        }}\n        // onRowClick={(e, campaign) => onCampaignPress(campaign)}\n        detailPanel={campaign => <CampaignDetails id={campaign.id} />}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useCampaignSummaries } from '../../hooks/useCampaignSummaries';\nimport { CampaignsTable } from './CampaignsTable';\n\nexport { CampaignsTable };\n\nexport default function() {\n  const [campaigns, loading] = useCampaignSummaries();\n\n  return (\n    <CampaignsTable\n      campaigns={campaigns}\n      loading={loading}\n      onCampaignPress={console.log}\n    />\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport { campaigns } from '../services';\nimport AlertContext from '../contexts/Alert';\n\nexport function useCampaignSummaries(): [CampaignSummary[], boolean] {\n  const [data, setData] = useState<CampaignSummary[]>([]);\n  const [loading, setLoading] = useState(false);\n  const alert = useContext(AlertContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await campaigns.summary();\n\n        setData(res.data);\n\n        setLoading(false);\n      } catch (error) {\n        alert.setError(error.message);\n        setLoading(false);\n      }\n    }\n\n    setLoading(true);\n    fetchData();\n  }, [alert]);\n\n  return [data, loading];\n}\n","import React, { useState } from 'react';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport { Alert } from '@material-ui/lab';\nimport 'typeface-roboto';\nimport { theme } from './config';\nimport AlertContext from './contexts/Alert';\nimport CampaignsTable from './components/CampaignsTable';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction App() {\n  const [error, setError] = useState('');\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AlertContext.Provider value={{ error, setError }}>\n        {error && <Alert severity=\"error\">{error}</Alert>}\n        <div className={classes.root}>\n          <CampaignsTable />\n        </div>\n      </AlertContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}